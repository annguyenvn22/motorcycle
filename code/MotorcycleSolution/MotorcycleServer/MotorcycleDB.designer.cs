#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MotorcycleServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="motorcycle")]
	public partial class MotorcycleDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertmotorcycle(motorcycle instance);
    partial void Updatemotorcycle(motorcycle instance);
    partial void Deletemotorcycle(motorcycle instance);
    partial void Insertinvoice(invoice instance);
    partial void Updateinvoice(invoice instance);
    partial void Deleteinvoice(invoice instance);
    partial void Insertinvoice_detail(invoice_detail instance);
    partial void Updateinvoice_detail(invoice_detail instance);
    partial void Deleteinvoice_detail(invoice_detail instance);
    #endregion
		
		public MotorcycleDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["motorcycleConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MotorcycleDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MotorcycleDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MotorcycleDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MotorcycleDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<motorcycle> motorcycles
		{
			get
			{
				return this.GetTable<motorcycle>();
			}
		}
		
		public System.Data.Linq.Table<invoice> invoices
		{
			get
			{
				return this.GetTable<invoice>();
			}
		}
		
		public System.Data.Linq.Table<invoice_detail> invoice_details
		{
			get
			{
				return this.GetTable<invoice_detail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private string _fullname;
		
		private string _address;
		
		private string _role;
		
		private EntitySet<invoice> _invoices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfullnameChanging(string value);
    partial void OnfullnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    #endregion
		
		public customer()
		{
			this._invoices = new EntitySet<invoice>(new Action<invoice>(this.attach_invoices), new Action<invoice>(this.detach_invoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fullname", DbType="NVarChar(50)")]
		public string fullname
		{
			get
			{
				return this._fullname;
			}
			set
			{
				if ((this._fullname != value))
				{
					this.OnfullnameChanging(value);
					this.SendPropertyChanging();
					this._fullname = value;
					this.SendPropertyChanged("fullname");
					this.OnfullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="VarChar(10)")]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_invoice", Storage="_invoices", ThisKey="username", OtherKey="customer")]
		public EntitySet<invoice> invoices
		{
			get
			{
				return this._invoices;
			}
			set
			{
				this._invoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.customer1 = this;
		}
		
		private void detach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.customer1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.motorcycle")]
	public partial class motorcycle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _color;
		
		private System.Nullable<int> _price;
		
		private string _type;
		
		private string _supplier;
		
		private System.Nullable<bool> _is_sold;
		
		private string _img_url;
		
		private EntitySet<invoice_detail> _invoice_details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OnpriceChanging(System.Nullable<int> value);
    partial void OnpriceChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnsupplierChanging(string value);
    partial void OnsupplierChanged();
    partial void Onis_soldChanging(System.Nullable<bool> value);
    partial void Onis_soldChanged();
    partial void Onimg_urlChanging(string value);
    partial void Onimg_urlChanged();
    #endregion
		
		public motorcycle()
		{
			this._invoice_details = new EntitySet<invoice_detail>(new Action<invoice_detail>(this.attach_invoice_details), new Action<invoice_detail>(this.detach_invoice_details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="NVarChar(10)")]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int")]
		public System.Nullable<int> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(10)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplier", DbType="NVarChar(20)")]
		public string supplier
		{
			get
			{
				return this._supplier;
			}
			set
			{
				if ((this._supplier != value))
				{
					this.OnsupplierChanging(value);
					this.SendPropertyChanging();
					this._supplier = value;
					this.SendPropertyChanged("supplier");
					this.OnsupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_sold", DbType="Bit")]
		public System.Nullable<bool> is_sold
		{
			get
			{
				return this._is_sold;
			}
			set
			{
				if ((this._is_sold != value))
				{
					this.Onis_soldChanging(value);
					this.SendPropertyChanging();
					this._is_sold = value;
					this.SendPropertyChanged("is_sold");
					this.Onis_soldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_url", DbType="NVarChar(500)")]
		public string img_url
		{
			get
			{
				return this._img_url;
			}
			set
			{
				if ((this._img_url != value))
				{
					this.Onimg_urlChanging(value);
					this.SendPropertyChanging();
					this._img_url = value;
					this.SendPropertyChanged("img_url");
					this.Onimg_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="motorcycle_invoice_detail", Storage="_invoice_details", ThisKey="id", OtherKey="motorcycle_id")]
		public EntitySet<invoice_detail> invoice_details
		{
			get
			{
				return this._invoice_details;
			}
			set
			{
				this._invoice_details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_invoice_details(invoice_detail entity)
		{
			this.SendPropertyChanging();
			entity.motorcycle = this;
		}
		
		private void detach_invoice_details(invoice_detail entity)
		{
			this.SendPropertyChanging();
			entity.motorcycle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invoice")]
	public partial class invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _customer;
		
		private System.Nullable<System.DateTime> _date_created;
		
		private System.Nullable<decimal> _total_price;
		
		private System.Nullable<bool> _is_resolved;
		
		private EntitySet<invoice_detail> _invoice_details;
		
		private EntityRef<customer> _customer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncustomerChanging(string value);
    partial void OncustomerChanged();
    partial void Ondate_createdChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createdChanged();
    partial void Ontotal_priceChanging(System.Nullable<decimal> value);
    partial void Ontotal_priceChanged();
    partial void Onis_resolvedChanging(System.Nullable<bool> value);
    partial void Onis_resolvedChanged();
    #endregion
		
		public invoice()
		{
			this._invoice_details = new EntitySet<invoice_detail>(new Action<invoice_detail>(this.attach_invoice_details), new Action<invoice_detail>(this.detach_invoice_details));
			this._customer1 = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string customer
		{
			get
			{
				return this._customer;
			}
			set
			{
				if ((this._customer != value))
				{
					if (this._customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerChanging(value);
					this.SendPropertyChanging();
					this._customer = value;
					this.SendPropertyChanged("customer");
					this.OncustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="Date")]
		public System.Nullable<System.DateTime> date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> total_price
		{
			get
			{
				return this._total_price;
			}
			set
			{
				if ((this._total_price != value))
				{
					this.Ontotal_priceChanging(value);
					this.SendPropertyChanging();
					this._total_price = value;
					this.SendPropertyChanged("total_price");
					this.Ontotal_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_resolved", DbType="Bit")]
		public System.Nullable<bool> is_resolved
		{
			get
			{
				return this._is_resolved;
			}
			set
			{
				if ((this._is_resolved != value))
				{
					this.Onis_resolvedChanging(value);
					this.SendPropertyChanging();
					this._is_resolved = value;
					this.SendPropertyChanged("is_resolved");
					this.Onis_resolvedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invoice_invoice_detail", Storage="_invoice_details", ThisKey="id", OtherKey="invoice_id")]
		public EntitySet<invoice_detail> invoice_details
		{
			get
			{
				return this._invoice_details;
			}
			set
			{
				this._invoice_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_invoice", Storage="_customer1", ThisKey="customer", OtherKey="username", IsForeignKey=true)]
		public customer customer1
		{
			get
			{
				return this._customer1.Entity;
			}
			set
			{
				customer previousValue = this._customer1.Entity;
				if (((previousValue != value) 
							|| (this._customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer1.Entity = null;
						previousValue.invoices.Remove(this);
					}
					this._customer1.Entity = value;
					if ((value != null))
					{
						value.invoices.Add(this);
						this._customer = value.username;
					}
					else
					{
						this._customer = default(string);
					}
					this.SendPropertyChanged("customer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_invoice_details(invoice_detail entity)
		{
			this.SendPropertyChanging();
			entity.invoice = this;
		}
		
		private void detach_invoice_details(invoice_detail entity)
		{
			this.SendPropertyChanging();
			entity.invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invoice_detail")]
	public partial class invoice_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _invoice_id;
		
		private int _motorcycle_id;
		
		private System.Nullable<decimal> _price;
		
		private EntityRef<invoice> _invoice;
		
		private EntityRef<motorcycle> _motorcycle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oninvoice_idChanging(int value);
    partial void Oninvoice_idChanged();
    partial void Onmotorcycle_idChanging(int value);
    partial void Onmotorcycle_idChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    #endregion
		
		public invoice_detail()
		{
			this._invoice = default(EntityRef<invoice>);
			this._motorcycle = default(EntityRef<motorcycle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					if (this._invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motorcycle_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int motorcycle_id
		{
			get
			{
				return this._motorcycle_id;
			}
			set
			{
				if ((this._motorcycle_id != value))
				{
					if (this._motorcycle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmotorcycle_idChanging(value);
					this.SendPropertyChanging();
					this._motorcycle_id = value;
					this.SendPropertyChanged("motorcycle_id");
					this.Onmotorcycle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invoice_invoice_detail", Storage="_invoice", ThisKey="invoice_id", OtherKey="id", IsForeignKey=true)]
		public invoice invoice
		{
			get
			{
				return this._invoice.Entity;
			}
			set
			{
				invoice previousValue = this._invoice.Entity;
				if (((previousValue != value) 
							|| (this._invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._invoice.Entity = null;
						previousValue.invoice_details.Remove(this);
					}
					this._invoice.Entity = value;
					if ((value != null))
					{
						value.invoice_details.Add(this);
						this._invoice_id = value.id;
					}
					else
					{
						this._invoice_id = default(int);
					}
					this.SendPropertyChanged("invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="motorcycle_invoice_detail", Storage="_motorcycle", ThisKey="motorcycle_id", OtherKey="id", IsForeignKey=true)]
		public motorcycle motorcycle
		{
			get
			{
				return this._motorcycle.Entity;
			}
			set
			{
				motorcycle previousValue = this._motorcycle.Entity;
				if (((previousValue != value) 
							|| (this._motorcycle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._motorcycle.Entity = null;
						previousValue.invoice_details.Remove(this);
					}
					this._motorcycle.Entity = value;
					if ((value != null))
					{
						value.invoice_details.Add(this);
						this._motorcycle_id = value.id;
					}
					else
					{
						this._motorcycle_id = default(int);
					}
					this.SendPropertyChanged("motorcycle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
